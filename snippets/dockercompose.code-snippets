{
	"dockercompose": {
		"prefix": "dockercompose",
		"body": [
			"#  docker-compose -f docker-compose.yml config check validate config",
			"version: \"${10|3.7,3.1,2.1|}\"",
			"services:${0}",
			"  ${12:servicname}:",
			"    ${14:build:",
			"      context: .",
			"      dockerfile: Dockerfile",
			"      target: ${15:yourstage}}",
			"    image: \"${16|limweb/tlenswoole:v1,richarvey/nginx-php-fpm:latest,nginx:latest,limweb/tlenswoole:v3,limweb/nginx-php7311-swoole:latest,limweb/trainer-nogpu:latest,limweb/trainer-nodegpu:latest,limweb/phpserv7:latest,limweb/servit:latest|}\"",
			"    container_name: ${18:container_name}${12}",
			"    working_dir: ${20|/app,/var/www/html|}",
			"    restart: \"${22|no,on-failure,always,unless-stopped|}\"",
			"    ports:",
			"      - \"${24:8101:8101}\"",
			"    expose:",
			"      - \"${26:8101}\"",
			"    command: \"${28:/usr/local/bin/php /app/index.php}\"",
			"    volumes:",
			"      - ${30}:${31}${20}",
			"    labels:",
			"      com.docker.compose.project: \"${32}${12}\"",
			"    environment:",
			"      VIRTUAL_HOST: ${33:\"${12}${34:.local.com}\"}",
			"      VIRTUAL_PORT: \"${35}${24}\"",
			"      LETSENCRYPT_HOST: ${33:\"${12}${34:.local.com}\"}",
			"      LETSENCRYPT_EMAIL: \"limweb@hotmail.com\"",
			"      DHPARAM_GENERATION: \"${36|true,false|}\"",
			"      DHPARAM_BITS: ${37:1024}",
			"      CERT_NAME: \"${39|<name>,shared,*.foo.com,foo.bar.com|}\"",
			"      HTTPS_METHOD: ${40|nohttp,noredirect,redirect,nohttps,noredirect|}",
			"      ENABLE_IPV6:  ${41|true,false|}",
			"      HOSTNAME: ${38}${33}",
			"      LANG: ${42:C.UTF-8}",
			"",
			"    ${47:depends_on:",
			"      - ${43:\"mongodb\"}",
			"    links:",
			"      - ${43}",
			"    external_links:",
			"      - ${43}",
			"    extra_hosts:",
			"      - ${44:\"sonar:172.28.1.1\"}",
			"    depends_on:",
			"      - ${46:servicename}}",
			"    network_mode:  \"bridge\"",
			"",
			"${90:volumes:",
			"  ${70:db-data}:",
			"  ${75:web-data}:",
			"  ${80:ini-data}:}",
			"  ",
			"${91:networks:",
			"   ${92:default:",
			"     driver: ${93|bridge,overlay|}",
			"     external:",
			"       name: ${94|faceml-frontend|}}",
			"   ${96:faceml-backend:",
			"     external:",
			"       name: ${97:faceml-backend}}",
			"}",
			"",
		],
		"description": "docker compose snippet by tlen",
		"scope": "yml,yaml,"
	},
	"dockerservice": {
		"body": [
			"",
			"  ${12:servicname}:",
			"    ${14:build:",
			"      context: .",
			"      dockerfile: Dockerfile",
			"      target: ${15:yourstage}}",
			"    image: \"${16|limweb/tlenswoole:v1,richarvey/nginx-php-fpm:latest,nginx:latest,limweb/tlenswoole:v3,limweb/nginx-php7311-swoole:latest,limweb/trainer-nogpu:latest,limweb/trainer-nodegpu:latest,limweb/phpserv7:latest,limweb/servit:latest|}\"",
			"    container_name: ${18:container_name}${12}",
			"    working_dir: ${20|/app,/var/www/html|}",
			"    restart: \"${22|no,on-failure,always,unless-stopped|}\"",
			"    ports:",
			"      - \"${24:8101:8101}\"",
			"    expose:",
			"      - \"${26:8101}\"",
			"    command: \"${28:/usr/local/bin/php /app/index.php}\"",
			"    volumes:",
			"      - ${30}:${31}${20}",
			"    labels:",
			"      com.docker.compose.project: \"${32}${12}\"",
			"    environment:",
			"      VIRTUAL_HOST: ${33:\"${12}${34:.local.com}\"}",
			"      VIRTUAL_PORT: \"${35}${24}\"",
			"      LETSENCRYPT_HOST: ${33:\"${12}${34:.local.com}\"}",
			"      LETSENCRYPT_EMAIL: \"limweb@hotmail.com\"",
			"      DHPARAM_GENERATION: \"${36|true,false|}\"",
			"      DHPARAM_BITS: ${37:1024}",
			"      CERT_NAME: \"${39|<name>,shared,*.foo.com,foo.bar.com|}\"",
			"      HTTPS_METHOD: ${40|nohttp,noredirect,redirect,nohttps,noredirect|}",
			"      ENABLE_IPV6:  ${41|true,false|}",
			"      HOSTNAME: ${38}${33}",
			"      LANG: ${42:C.UTF-8}",
			"",
			"    ${47:depends_on:",
			"      - ${43:\"mongodb\"}",
			"    links:",
			"      - ${43}",
			"    external_links:",
			"      - ${43}",
			"    extra_hosts:",
			"      - ${44:\"sonar:172.28.1.1\"}",
			"    depends_on:",
			"      - ${46:servicename}}",
			"    network_mode:  \"bridge\"",
			"",
			"",
		],
		"prefix": "dockerservice",
		"description": "docker composer add service",
		"scope": "yml,yaml,"
	},
	"nginxcfg": {
		"body": [
			"${1}#default.conf",
			"server {",
			"    listen 80;",
			"    listen [::]:80 default ipv6only=on;",
			"    root /var/www/html;",
			"    index index.php index.html index.htm;",
			"    server_name _;",
			"    sendfile off;",
			"    error_log /dev/stdout info;",
			"    access_log /dev/stdout;",
			"    location / {",
			"        try_files \\$uri \\$uri/  /index.php?\\$query_string;",
			"    }",
			"    location = /404.html {",
			"        root /var/www/errors;",
			"        internal;",
			"    }",
			"    location ^~ /ngd-style.css {",
			"        alias /var/www/errors/style.css;",
			"        access_log off;",
			"    }",
			"    location ^~ /ngd-sad.svg {",
			"        alias /var/www/errors/sad.svg;",
			"        access_log off;",
			"    }",
			"    location ~ \\.php\\$ {",
			"        try_files \\$uri =404;",
			"        fastcgi_split_path_info ^(.+\\.php)(/.+)\\$;",
			"        fastcgi_pass unix:/var/run/php-fpm.sock;",
			"        fastcgi_param SCRIPT_FILENAME \\$document_root\\$fastcgi_script_name;",
			"        fastcgi_param SCRIPT_NAME \\$fastcgi_script_name;",
			"        fastcgi_index index.php;",
			"        include fastcgi_params;",
			"    }",
			"    location ~* \\.(jpg|jpeg|gif|png|css|js|ico|webp|tiff|ttf|svg)\\$ {",
			"        expires 5d;",
			"    }",
			"    location ~ /\\. {",
			"        log_not_found off;",
			"        deny all;",
			"    }",
			"    location ^~ /.well-known {",
			"        allow all;",
			"        auth_basic off;",
			"    }",
			"    error_page 404 /404.html;",
			"}",
			"",
		],
		"description": "Laravel ServitFW  nginx.conf  default.conf",
		"prefix": "nginxcfg",
	},
	"dockerfile":{
		"prefix": ["docker","dockerfile"],
		"description": "Docker File genenrator",
		"body": [
			"FROM node:10.16.3-alpine as install ",
			"${10:RUN apk add --no-cache git} ",
			"${20:RUN apk add tzdata && \\ ",
			"    cp /usr/share/zoneinfo/Asia/Bangkok /etc/localtime && \\ ",
			"    echo \"Asia/Bangkok\" > /etc/timezone ",
			"} ",
			"FROM install as git ",
			"WORKDIR ${30:/usr/src/app} ",
			"USER ${40:root} ",
			"${50:COPY package.json ${30} }",
			"${55:COPY package-lock.json ${30} }",
			"${60:RUN npm install}",
			"",
			"FROM git as build",
			"",
			"$0 ",
			"${70:",
			"${75:RUN npm run build}",
			"EXPOSE ${76|3000,5000,50001,80,443,8080,8000|} ",
			"RUN date > build_date ",
			"RUN cat build_date ",
			"${78:CMD npm run start} ",
			"}",
			"${80:",
			"FROM nginx:1.15 ",
			"WORKDIR ${81:/var/www/html} ",
			"COPY --from=2 ${30}/${82:build} ${81}/ ",
			"${85:COPY ./nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf }",
			"${86:CMD [\"nginx\", \"-g\", \"daemon off;\"] }",
			"}"
		]
	}
}