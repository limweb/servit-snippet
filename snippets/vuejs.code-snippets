{
	"vadlteboxtemp": {
		"prefix": "vadlteboxtemp",
		"body": "\n<h2 class=\"page-header\">${10:pageheader}</h2>\n<div class=\"box box-default\">\n    <div class=\"box-header with-border\">\n        <i class=\"fa fa-warning\"></i>\n        <h3 class=\"box-title\">${20:boxtitle}</h3>\n    </div>\n    <div class=\"box-body\">\n    \t${30:boxbody}\n    </div>\n</div>\n${0}\n",
		"description": "Vue Admin Lte  Boxtemplate "
	},
	"vadltetemp": {
		"prefix": "vadltetemp",
		"body": "\n<template>\n<div class=\"content-wrapper\" style=\"min-height: 1036px;\">\n    <section class=\"content-header\">\n      <h1>\n          {{title}}\n          <small>{{subtitel}}</small>\n      </h1>\n      <ol class=\"breadcrumb\">\n          <li>\n            <router-link to=\"/dashboard\">\n              <i class=\"fa fa-dashboard\"></i> <span>Home</span>\n            </router-link>\n          </li>\n          ${5:<li><router-link to=\"/dashboard\">\n              <i class=\"fa fa-dashboard\"></i> <span>Home</span>\n            </router-link></li>}\n          <li class=\"active\">{{title}}</li>\n      </ol>\n    </section>\n    <section class=\"content\">\n        <div class=\" box box-default \">\n            <div class=\"box-header with-border\">\n                <h3 class=\"box-title\"><i class=\"fa fa-tag\"></i> {{BoxTitle}}</h3>\n            </div>\n            <div class=\"box-body\">\n                <div class=\"row\">\n                      {{boxbox}}\n                </div>\n            </div>\n        </div>\n        <h2 class=\"page-header\">{{PageHeader}}</h2>\n        <div class=\"row\">\n              {{boxbox}}\n        </div>\n    </section>\n</div>\n</template>\n\n<script>\n\nexport default {\n\n  name: '${10:ComponeneName}',\n\n  data () {\n    return {\n        title: \"${20:Title}\",\n        subtitel: '${30:Sub title}',\n        pageheader: '${40:PageHeader}',\n        boxtitle: '${50:Boxtitle}',\n        boxbox: '${60:boxbox}',\n    };\n  }\n};\n</script>\n\n<style lang=\"css\" scoped>\n${0}\n\n</style>\n\n",
		"description": "Vue Template for Admin Lte by Tlen"
	},
	"vc": {
		"prefix": "vc",
		"body": "\n\nvar vm = new Vue({\nmixins:[],\ndata:{\n\t${0:counter: 1 }\n\n},\nel:'#app',\nmethods:{\n test(){ console.log('test',this);  },\n test1(){ alert('test1'); }\n},\ncomputed:{ \n\taaa:function(){\n\t   return this.counter * 2;\n\t}\n},\nwatch: {\n    counter: function (val, oldVal) {\n      console.log('new: %s, old: %s', val, oldVal)\n    },\n},\ncomponents:{\n\t'comp1':{template:'<div>componetn1</div>'},\n\t'comp2':{template:'<div>componetn2</div>'},\n},\n// render : h => h(App),\nbeforeCreate  () { /* console.log('beforeCreate'); */ },\ncreated       () { /* console.log('created'); */ },\nbeforeMount   () { /* console.log('beforeMount'); */ },\nmounted       () { /* console.log('mounted'); */\n                this.test();\n                this.test1();\n},\nbeforeUpdate  () { /* console.log('beforeUpdate'); */ },\nupdated       () { /* console.log('updated'); */ },\nbeforeDestroy () { /* console.log('beforeDestroy'); */ },\ndestroyed     () { /* console.log('destroyed'); */ },\n})\t\n\n",
		"description": "Vue Component 1"
	},
	"vuex": {
		"prefix": "vuex",
		"body": "\nimport Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\n  const state = {\n  \t// count: 0\n\t${1:var,}\n  }\n  const mutations ={\n  \t\t${3:${4:mutationfuncname} (state, payload ) {  // playload obj or data \n    \t\tstate.${5:var} ${6: = payload }\n  \t\t\\},}\n  }\n  const getters = {\n  \t\t//getCounter: state => state.count\n\t\t${10:${20:gettername}: state => state.${30:var}, }\n  }\n  const actions = {\n \t\t//increment: ({ commit }, amount) => commit('INCREMENT', amount)\n \t\t${40:${50:actionname}: ({ commit \\}, ${60:actionvar}) => commit('${70:mutationfunc}', ${60:}), }\n  }\n\nexport default new Vuex.Store({\n\tstate,\n\tmodules:{\n\n\t},\n\tmutations,\n\tgetters,\n\tactions,\n})\n\n",
		"description": "vuex start"
	},
	"vxwatch": {
		"prefix": "vxwatch",
		"body": "\n// in vuex store file\nstore.watch((state) => state.searchString, (oldValue, newValue) => {\n    console.log('search string is changing')\n    console.log(oldValue)\n    console.log(newValue)\n})\n",
		"description": "vuex watch example"
	},
	"vxaction": {
		"prefix": "vxaction",
		"body": ["/*{",
			"  state,      // same as `store.state`, or local state if in modules",
			"  rootState,  // same as `store.state`, only in modules",
			"  commit,     // same as `store.commit`",
			"  dispatch,   // same as `store.dispatch`",
			"  getters,    // same as `store.getters`, or local getters if in modules",
			"  rootGetters",
			"}*/",
			"${50:actionname}: ({ commit \\}, ${60:actionvar}) => commit('${70:mutationfunc}', ${60:}),\n"
		],
		"description": "vuex actions"
	},
	"vxapi": {
		"prefix": "vxapi",
		"body": "\nimport axios from 'axios';\n\nexport default {\n  getCurrentUser() {\n    return axios.get('/user/me');\n  },\n}\n",
		"description": ""
	},
	"vxas": {
		"prefix": "vxas",
		"body": "\nasync ${1:actionname}({commit}){\n    const ${10:var} = await ${20:api.function();}\n\tcommit('${30:mutationfunc}', ${10})\n},\n",
		"description": "vuex async actions"
	},
	"vxastrycatch": {
		"prefix": "vxastrycatch",
		"body": "\nasync ${1:actionfunc}({ ${10:dispatch},${20:commit} ${30:,getters,state,rootGetters,rootState} }, ${40:var} ) {\n    try {\n        const ${41:rs} = await ${45:Api.function}(${40:var})\n        ${50:${51:dispatch/}${52:commit}}('${60:action/mutation}', ${65:para_var1})\n    } catch (e) {\n        console.log('error', e);\n        ${70}\n    }\n},\n\n",
		"description": "vuex async await try catch function"
	},
	"vxgetter": {
		"prefix": "vxgetter",
		"body": "\n//state getters rootState rootGetters \n${20:gettername}: state => state.${30:var},\n",
		"description": "vuex getters"
	},
	"vxp": {
		"prefix": "vxp",
		"body": "\nimport { ${10:mapState,} ${20:mapGetters,} ${30:mapMutations,} ${40:mapActions}  } from 'vuex'\n//...mapState([]),\n//...mapGetters([]),\n//...mapMutations([]),\n//...mapActions([]),\n${0}\n",
		"description": ""
	},
	"vxmutation": {
		"prefix": "vxmutation",
		"body": "\n${4:mutationfuncname} (state, payload ) {  // playload obj or data \n\tstate.${5:var} ${6: = payload }\n\\},\n\n",
		"description": "vuex mutation"
	},
	"axiosasync": {
		"prefix": "axiosasync",
		"body": [
			"",			
			"async ${5:functionname}() => { ",
			"    try { ",
			"        var ${10:result} = await ${20:promisefunction()}; ",
			"        console.log(${10}); ",
			"        ${0} ",
			"        ${30:this.\\$alert(${10}.data.msg,(${10}.data.title?${10}.data.title:'Success'),{type:(${10}.data.type?${10}.data.type :'success')\\}); }",
			"    } catch (err) { ",
			"        if(err.response) { ",
 			"           ${40:if(err.response.status == 401 ) this.\\$router.push('/login'); return; }",
			"            console.log('data----->',err.response.data); ",
			"            console.log('status--->',err.response.status); ",
			"            console.log('header--->',err.response.headers); ",
			"            ${50:this.\\$alert(err.respone.data.error.message,'Error',{type:'error'\\}); }",
			"        } else if(err.request) { ",
			"            console.log('err request--->',err.request); ",
			"        } else { ",
			"            console.log('err msg--->', err.message); ",
			"            console.log('err---->',err); ",
			"            ${60:this.\\$alert(err.message,'Error',{type:'error'\\});}",
			"        } ",
			"    } ",
			"} ",
			"",
		],
		"description": "Axios async await"
	},
	"axiosget": {
		"prefix": "axiosget",
		"body": [
			"",
			"if(this.${5:process}){return;\\} ",
			"this.${5} = true; ",
			"let token = ${10:this.\\$ls.get('token')};",
			"let url='${20:url}'; ",
			"${30|this.$axios,this.$http,axios|}.get(url,{",
			"   ${35: headers: { ",
			"        'Authorization': `${40|Bearer,Basic,token,ref_token|} ${50:\\${token\\}}`,  ",
			"        'Content-Type': 'application/json',",
			"    \\}} ",
			"\\}).then((rs) => {",
			"    console.log(rs);",
			"    this.${5}=false; ",
			"    if(rs.data.success){",
			"       ${0}",
			"       ${51:this.\\$alert(rs.data.msg,(rs.data.title?rs.data.title:'Success'),{type:(rs.data.type?rs.data.type :'success')\\}); }",			
			"    } else {",
			"       ${52:this.\\$alert(rs.data.msg,(rs.data.title?rs.data.title:'Error'),{type:(rs.data.type?rs.data.type:'error')\\}); }",			
			"    }",
			"\\}).catch((err) => {",
			"    if(err.response) { ",
 			"        ${55:if(err.response.status == 401 ) this.\\$router.push('/login'); return; }",
			"        console.log('data----->',err.response.data); ",
			"        console.log('status--->',err.response.status); ",
			"        console.log('header--->',err.response.headers); ",
			"        ${60:this.\\$alert(err.respone.data.error.message,'Error',{type:'error'\\}); }",
			"    \\} else if(err.request) { ",
			"        console.log('err request--->',err.request); ",
			"    \\} else { ",
			"        console.log('err msg--->', err.message); ",
			"        console.log('err---->',err); ",
			"        ${70:this.\\$alert(err.message,'Error',{type:'error'\\});}",
			"    \\} ",
			"\\});",
			"setTimeout(()=>{this.${5}=false;\\},${75:3000});",
			"",
		],
		"description": "Axios get ajax function"
	},
	"axiospost": {
		"prefix": "axiospost",
		"body": [
			"",
			"if(this.${5:process}){return;\\} ",
			"this.${5} = true; ",
 			"${10:// let formData = new FormData();}",
      		"${20:// formData.append( 'name','value');}",
			"let token = ${21:this.\\$ls.get('token')};",
			"let url='${25:url}'; ",
			"${30|this.$axios,this.$http,axios|}.post(url, ",
			" {",
			"   ${40://data}",
			"   ${50://formData}",
			" \\},{",
			"   ${60: headers: { ",
			"        'Authorization': `${62|Bearer,Basic,token,ref_token|} ${65:\\${token\\}}`,",
			"        ${70|'Content-Type': 'application/json','Content-Type': 'multipart/form-data'|},",
			"    \\}} ",
			"\\}).then((rs) => {",
			"    console.log(rs);",
			"    if(rs.data.success){",
			"       ${0}",
			"       ${71:this.\\$alert(rs.data.msg,(rs.data.title?rs.data.title:'Success'),{type:(rs.data.type?rs.data.type :'success')\\}); }",
			"    } else {",
			"       ${72:this.\\$alert(rs.data.msg,(rs.data.title?rs.data.title:'Error'),{type:(rs.data.type?rs.data.type:'error')\\}); }",
			"    }",
			"}).catch( (err) => {",
			"    if(err.response) { ",
			"        ${73:if(err.response.status == 401 ) this.\\$router.push('/login'); return; }",
			"        console.log('data----->',err.response.data); ",
			"        console.log('status--->',err.response.status); ",
			"        console.log('header--->',err.response.headers); ",
			"        ${74:this.\\$alert(err.respone.data.error.message,'Error',{type:'error'\\}); }",
			"    \\} else if(err.request) { ",
			"        console.log('err request--->',err.request); ",
			"    \\} else { ",
			"        console.log('err msg--->', err.message); ",
			"        console.log('err---->',err); ",
			"        ${75:this.\\$alert(err.message,'Error',{type:'error'\\});}",
			"    \\} ",
			"\\});",
			"setTimeout(()=>{this.${5}=false;\\},${95:3000});",                         						
			"",
		],
		"description": "Axios Post ajax snippet"
	},
	"vuetrans": {
		"prefix": "vt",
		"body": "{{\\$t('$0')}}",
		"description": "Vue i18n tran"
	},
	"bvuetrans": {
		"prefix": "bvt",
		"body": "\\$t('$0')",
		"description": "Vue i18n tran"
	},
	"create-vuex-setter-mutation": {
		"scope": "javascript",
		"prefix": "vuex-setter-mutation",
		"body": [
			"export function set${1/(.*)/${1:/capitalize}/} (state, ${1}) {",
			"\tstate.${1} = ${1};",
			"}",
		],
		"description": "Create vuex simple setter mutation"
	},
	"create-vuex-action": {
		"scope": "javascript",
		"prefix": "vuex-fetch-action",
		"body": [
			"export async function get${1/(.*)/${1:/capitalize}/} ({ commit }) {",
			"\tconst res = await this.$axios.get('/${1}')",
			"\tcommit('set${1/(.*)/${1:/capitalize}/}', res.data)",
			"}"
		]
	},
	"vc1":{
		"prefix": "vc1",
		"body":[
			" export default {  ",
			"   template: `<div  ",
			"   contenteditable=\"true\"  ",
			"   v-once  ",
			"   v-html=\"value\"  ",
			"   :value=\"value\"  ",
			"   @input=\"updateValue\"> ",
			"             </div>`, ",
			"     mixins: [],  ",
			"     props: ['value'], ",
			"     data() {  ",
			"       return {  ",
			"           theme: '${20:AdminLte}',  ",
			"           name: '${30:Editable}',  ",
			"       };  ",
			"     },  ",
			"     methods: { ",
			"         updateValue(\\$event) { ",
			"                 let value = \\$event.target.innerHTML; ",
			"             //console.log('----input---',\\$event,this.\\$el,document.activeElement); ",
			"             this.\\$emit('input', value)  ",
			"         } ",
			"     },  ",
			"     watch: { ",
			"         value: function (newValue) { ",
			"             if (document.activeElement == this.\\$el) { ",
			"                 return ",
			"             } ",
			"             this.\\$el.innerHTML = newValue; ",
			"         } ",
			"     }, ",
			"     created() {  ",
			"       console.log( this.name + 'component is created');  ",
			"     },  ",
			"     computed: {},  ",
			"     updated(){}, ",
			"     mounted(){},  ",
			"     components:{}  ",
			" };  ",			
		],
		"description": "vue custom component template" 
	},
	"vc2":{
	  "prefix": "vc2",
	  "body": [
			" export default { ",
			"   template: `<div> ",
			"         <input type=\"number\"  ",
			"         class=\"form-control\" ",
			"         :class=\"'w-3/4'\" ",
			"         :value=\"value\" ",
			"         :placeholder=\"placeholder\" ",
			"         :required=\"required\" ",
			"         @input=\"updateValue(\\$event.target.value)\"  ",
			"         readonly ",
			"         /> ",
			"         </div>`, ",
			"   mixins: [], ",
			"   props: { ",
			"     value: { ",
			"       type: Number , ",
			"       default: 0, ",
			"     }, ",
			"     placeholder: { ",
			"       type: String, ",
			"       default: '', ",
			"     }, ",
			"     required: { ",
			"       type: Boolean, ",
			"       default: false ",
			"     } ",
			"   }, ",
			"   data() { ",
			"     return { ",
			"       theme: '${20:AdminLte}', ",
			"       name: '${30:Inputnumber}', ",
			"     }; ",
			"   }, ",
			"   methods: { ",
			"     updateValue(value) { ",
			"       console.log('----input---'); ",
			"       this.\\$emit('input', Number(value)) ",
			"     } ",
			"   }, ",
			"   computed: {}, ",
			"   created() { ",
			"     console.log(this.name + 'component is created'); ",
			"   }, ",
			"   mounted() {}, ",
			"   components: {} ",
			" }; ",		  
	  ],
	  "description": "vue custom component template"
	},
	"consolelog":{
		"prefix": ["clg","console","log"],
		"body": "console.${1|log,info,error,table|}('${5}--->',${10});",
		"description": "console log"
	},
	"evtpre":{
		"prefix": ["evtp"," evt.prevent"],
		"body": ["${1:evt}.preventDefault();"],
		"description": " evt.preventDefault();"
	},
	"vuenexttick":{
		"prefix": ["nexttick","vuenexttick"],
		"body": [
			"  this.\\$nextTick(()=>{ ",
			"      ${0}",
			"  });"
		],
		"description": "this.$nextTick(callback)"
	},
	"vcc": {
		"prefix": ["vcc"],
		"body":[
		"export default { ",
		"    template: `${50}`,",
		"    mixins: [], ",
		"    data() { ",
		"      return { ",
		"          theme: 'AdminLte', ",
		"          name: '${10}', ",
		"          uuid: '', ",      
		"      }; ",
		"    }, ",
		"    created() { ",
		"      console.log( this.name + 'component is created'); ",
		"      this.uuid ='idx'+Math.random().toString(36).slice(-6);  ",
		"    }, ",
		"    methods: {}, ",
		"    computed: {}, ",
		"    mounted() {}, ",
		"    components:{} ",
		"}; ",
		],
		"description": "vue Template literals"
	},
	"vcc1": {
		"prefix": ["vcc","vcinput"],
		"body":[
		"export default { ",
		"    inheritAttrs: false, ",
		"    template: ` ",
		"    <input ",
		"       ${50:type=\"text${0}\"}",
		"       class=\"w-full h-12 rounded border-1\"  ",
		"       :value=\"value\" ",
		"       @input=\"updateValue(\\$event.target.value)\"  ",
		"       v-bind=\"\\$attrs\" ",
		"    />       ",
		"    `,",
		"    mixins: [], ",
		"    props:[\"value\"], ",
		"    data() { ",
		"      return { ",
		"          theme: 'AdminLte', ",
		"          name: '${TM_FILENAME_BASE}${10}', ",
		"          uuid: '', ",
		"      }; ",
		"    }, ",
		"    created() { ",
		"      console.log( this.name + 'component is created'); ",
		"      this.uuid ='idx'+Math.random().toString(36).slice(-6);  ",
		"    }, ",
		"    methods: { ",
		"       updateValue(value){ ",
		"         this.\\$emit('input',value) ",
		"       }         ",
		"    }, ",
		"    computed: {}, ",
		"    mounted() {}, ",
		"    components:{} ",
		"}; ",
		],
		"description": "vue Template literals"
	},
	"message":{
		"prefix": ["ele-message","msg","elemsg"],
		"body": [
			"        this.\\$message({",
			"          message: '${0}',",
			"          type: '${10|success,info,warning,error|}'",
			"        });",
		],
		"description": " elemetn ui message "
	},
	"msgbox":{
		"prefix": "msgbox",
		"body": [
			"    this.\\$msgbox.${10|alert,confirm,prompt|}(",
			"        '${0:message}', ",
			"        '${30:title}', {",
			"        confirmButtonText: '${40:OK}',",
			"        cancelButtonText: '${50:Cancel}',",
			"        type: '${60|success,info,warning,error|}',",
			"        center: ${70|true,false|},",
			"    \\})",
		],
		"description": "element ui msgbox"

	},
	"notify":{
		"prefix": "notify",
		"body":[
			"      this.\\$notify({",
			"          title: '${10:Success}',",
			"          message: '${0}',",
			"          type: '${30|success,info,warning,error|}'",
			"      });",
		],
		"description": "element ui notify"
	},
	"alert":{
		"prefix": "alert",
		"body":[
			"   this.\\$alert( ",
			"       '${0:message}', ",
			"       '${10:title}', ",
			"       { type:'${20|success,info,warning,error|}' } ",
			"   );",
		],
		"description": "element ui alert"
	}
}