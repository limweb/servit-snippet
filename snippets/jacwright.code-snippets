{
	"jacwctrl" :{
		"prefix": "jacwrightctrl",
		"body": [
			" use	Illuminate\Database\Capsule\Manager as Capsule;",
			" use	Carbon\Carbon;",
			" ",
			" class ${20:${TM_FILENAME_BASE}${22:Controller}} {",
			"     ${0}",
			" }",
		],
		"description": "jacwright Controller"
	},
	"jacwfunc":{
		"prefix":"jacwfunc",
		"body":[
			"\r",
			"/**\r",
			"*@${1}noAuth\r",
			"*@url ${10|GET,POST,PUT,DELETE|} /${20:index}${30:}\r",
			"*----------------------------------------------",
			"*DATE:  ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}(${CURRENT_DAY_NAME_SHORT})  ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND} \r\n",
			"*----------------------------------------------",
			"*/\r",
			"public function ${20}(${30}){\r",
			"\ttry {\r",
			"\t\t\r",
			"\t\treturn [\r",
			"\t\t\t//'ajax' => \\$ajax,\r",
			"\t\t\t//'page' => \\$page,\r",
			"\t\t\t//'perpage' => \\$perpage,\r",
			"\t\t\t//'skip' => \\$skip,\r",
			"\t\t\t//'total' => \\$total,\r",
			"\t\t\t//'count' => count(\\$datas),\r",
			"\t\t\t//'datas' => \\$datas,\r",
			"\t\t\t//'columns' => \\$columns,\r",
			"\t\t\t//'info' => \\$info,\r",
			"\t\t\t//'infos' => \\$info,\r",
			"\t\t\t//'domains' => \\$domains,\r",
			"\t\t\t//'method' => \\$method,\r",
			"\t\t\t'status' => '1',\r",
			"\t\t\t'success'=> true,\r",
			"\t\t\t//'sql' => Capsule::getQueryLog(),\r",
			"\t\t\t'func'=> __CLASS__.'/'.__FUNCTION__\r",
			"\t\t];\r",
			"\t} catch (Exception \\$e) {\r",
			"\t\treturn[\r",
			"\t\t\t'status' => '0',\r",
			"\t\t\t'success'=> false,\r",
			"\t\t\t'msg'=> \\$e->getMessage(),\r",
			"\t\t\t'func'=> __CLASS__.'/'.__FUNCTION__,\r",
			"\t\t]; \r",
			"\t}\r",
			"}\r",
			"\r",
			""
		],
		"description": "jacwright gen func"
	},
	"jacwmodel":{
		"prefix":"jacwmodel",
		"body":[
			"use Illuminate\\Database\\Eloquent\\Model;\r",
			"use Illuminate\\Database\\Eloquent\\SoftDeletes;\r",
			"class ${10:${TM_FILENAME_BASE}} extends ${15:Model}\r",
			"{\r",
			"\t\tprotected\t\\$table='${20:tablename}';\r",
			"\t\tprotected\t\\$primaryKey='${30:id}';\r",
			"\t\tpublic\t\\$timestamps = ${40|false,true|};\r",
			"\t\t${70}protected\t\\$guarded = array('id');\r",
			"\t\t${70}protected\t\\$fillable = [];\r",
			"\t\t${70}protected\t\\$hidden = []; //สำหรับใส่ mutations\r",
			"\t\t${70}protected\t\\$appends = [];\r",
			"\t\t${70}protected\t\\$with = [];\r",
			"\t\t${70}protected\t\\$connection = '';\r",
			"} ${0}\r"
		],
		"description": "jacwright gen model"
	},
	"jacwsrv": {
    "prefix": "jacwsrv",
    "body": [
      "\r",
      "//----------------------------------------------",
      "//FILE NAME:  ${TM_FILENAME} gen for Servit Framework Service\r",
      "//Created by: Tlen<limweb@hotmail.com>\r",
      "//DATE: ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}(${CURRENT_DAY_NAME_SHORT})  ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND} \r\n",
      "//----------------------------------------------",
      "use Illuminate\\Database\\Capsule\\Manager as Capsule;\r",
      "\r",
      "class ${1:${TM_FILENAME_BASE}${2:Service}} \r",
      "{\r",
      "${3:\r",
      "    public static function all()",
      "    {",
      "        return ${30:Model}::get();",
      "    \\}",
      "",
      "    public static function alliddesc()",
      "    {",
      "        return ${30}::orderBy('id', 'desc')->get();",
      "    \\}",
      "",
      "    public static function insert(\\$arrdata)",
      "    {",
      "        \\$r = new ${30}();",
      "        \\$fills = \\$r->getFillable();",
      "        foreach (\\$fills as \\$key) {",
      "            if (isset(\\$arrdata[\\$key])) {",
      "                \\$r->{\\$key\\} = \\$arrdata[\\$key];",
      "            \\}",
      "        \\}",
      "        \\$r->save();",
      "        return \\$r;",
      "    \\}",
      "",
      "    public static function insertOrupdate(\\$arrdata)",
      "    {",
      "        \\$r = null;",
      "        if (isset(\\$arrdata['id'])) {",
      "            \\$r = ${30}::find(\\$arrdata['id']);",
      "        \\}",
      "        if (!\\$r) {",
      "            \\$r = new ${30}();",
      "        \\}",
      "",
      "        \\$fills = \\$r->getFillable();",
      "        foreach (\\$fills as \\$key) {",
      "            if (isset(\\$arrdata[\\$key])) {",
      "                \\$r->{\\$key\\} = \\$arrdata[\\$key];",
      "            \\}",
      "        \\}",
      "        \\$r->save();",
      "        return \\$r;",
      "    \\}",
      "",
      "    public static function delete(\\$id)",
      "    {",
      "        ${35:\\$r} = ${30}::find(\\$id);",
      "        if (${35}) {",
      "            return ${35}->delete();",
      "        \\} else {",
      "            return 0;",
      "        \\}",
      "    \\}",
      "    ",
      " }",
      "    ${0}\r",
      "} \r",
      "\r",
      ""
    ],
    "description": "Servit Rest ful Service "
  },
}