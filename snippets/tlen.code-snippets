{
  "comment": {
    "prefix": "comment",
    "body": [
      "//=================================\r",
      "//FILE NAME:  ${TM_FILENAME}\r",
      "//Created by: Tlen<limweb@hotmail.com>\r",
      "//DATE: ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}(${CURRENT_DAY_NAME_SHORT})  ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND} \r\n",
      "//=================================\r"
    ],
    "description": "test"
  },
  "vmixins": {
    "prefix": "vmixins",
    "body": [
      "//=================================\r",
      "//FILE NAME:  ${TM_FILENAME}\r",
      "//Created by: Tlen<limweb@hotmail.com>\r",
      "//DATE:       ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}(${CURRENT_DAY_NAME_SHORT}) ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}\r",
      "//DESC:       $1",
      "//=================================\r",
      "export default {\r",
      "template:``,\r",
      "data(){\r",
      "    return {\r",
      "        $10\r",
      "    }\r",
      "},\r",
      "methods:{\r",
      "$20\r",
      "},\r",
      "computed:{\r",
      "$30\r",
      "},\r",
      "watch:{\r",
      "$40\r",
      "},\r",
      "components:{\r",
      "$50\r",
      "},\r",
      "beforeCreate(){},\r",
      "created(){\r",
      "$60\r",
      "},\r",
      "beforeMount(){},\r",
      "mounted(){\r",
      "$70\r",
      "},\r",
      "beforeUpdate(){},\r",
      "updated(){\r",
      "\r",
      "},\r",
      "beforeDestroy(){},\r",
      "destroyed(){},\r",
      "}\r"
    ],
    "description": "Servit Vue Mixins Generator Snippet vmixins"
  },
  "vpage": {
    "prefix": "vpage",
    "body": [
      "//=================================\r",
      "//FILE NAME:  ${TM_FILENAME}\r",
      "//Created by: Tlen<limweb@hotmail.com>\r",
      "//DATE:       ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}(${CURRENT_DAY_NAME_SHORT}) ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}\r",
      "//DESC:       $1",
      "//=================================\r",
      "import mixistemplate from \"../mixins/mixintemplate.js\";\r",
      "import crudmixin from \"../mixins/mixincrud.js\"\r",
      "import uuidmixin from \"../mixins/uuidmixin.js\"\r",
      "export default {\r",
      "template:``,\r",
      "mixins: [uuidmixin,mixistemplate, crudmixin],\r",
      "data(){\r",
      "    return {\r",
      "        $10\r",
      "    }\r",
      "},\r",
      "methods:{\r",
      "$20\r",
      "},\r",
      "computed:{\r",
      "$30\r",
      "},\r",
      "watch:{\r",
      "$40\r",
      "},\r",
      "components:{\r",
      "$50\r",
      "},\r",
      "beforeCreate(){},\r",
      "created(){\r",
      "$60\r",
      "},\r",
      "beforeMount(){},\r",
      "mounted(){\r",
      "$70\r",
      "},\r",
      "beforeUpdate(){},\r",
      "updated(){\r",
      "\r",
      "},\r",
      "beforeDestroy(){},\r",
      "destroyed(){},\r",
      "}\r"
    ],
    "scope": "javascript,typescript,vue,vue-html,plaintext",
    "description": "Servit Vue Page Generator"
  },
  "restmodel": {
    "prefix": "restmodel",
    "body": [
      "\r",
      "//----------------------------------------------",
      "//FILE NAME:  ${TM_FILENAME} gen for Servit Framework Model\r",
      "//Created by: ${1:Tlen<limweb@hotmail.com>}\r",
      "//DATE: ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}(${CURRENT_DAY_NAME_SHORT})  ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND} \r\n",
      "//----------------------------------------------",
      "${2}namespace App; \r",
      "use Illuminate\\Database\\Eloquent\\Model;\r",
      "use Illuminate\\Database\\Eloquent\\SoftDeletes;\r",
      "use Servit\\Restsrv\\Model\\BaseModel;\r",
      "//use DB;\r",
      "\r",
      "class ${10:${TM_FILENAME_BASE}} extends ${15|BaseModel,Model|}\r",
      "{\r",
      "\t\tprotected\t\\$table='${20:tablename}';\r",
      "\t\tprotected\t\\$primaryKey='${30:id}';\r",
      "\t\tprotected\t\\$keyType = 'string';\r",
      "\t\tpublic\t\\$timestamps = ${40|false,true|};\r",
      "\t\tprotected\t\\$dateFormat = 'U';",
      "\t\t//set default value for attributes at new Model()",
      "\t\tprotected\t\\$attributes = [//'delayed' => false,];",
      "\t\t//Touching Parent Timestamps\r",
      "\t\tprotected\t\\$touches = [",
      "\t\t //'post'  // post is relation function",
      "\t\t];",
      "\t\t${60}const CREATED_AT = 'create_date';\r",
      "\t\t${60}const UPDATED_AT = 'update_date';\r",
      "\t\t${70}protected\t\\$guarded = array('id');\r",
      "\t\t${70}protected\t\\$fillable = [];\r",
      "\t\t${70}protected\t\\$hidden = []; //สำหรับใส่ mutations\r",
      "\t\t${70}protected\t\\$appends = [];\r",
      "\t\t${70}protected\t\\$with = [];\r",
      "\t\t${70}protected\t\\$connection = '';\r",
      "\r",
      "\t\t${80}use SoftDeletes;\r",
      "\t\t${80}protected\t\\$dates = [${81:'created_at',}${82:'updated_at',}${83:'deleted_at'}];\r",
      "\t\t${90}//integer, real, float, double, string, boolean, object, array, collection, date and datetime.\r",
      "\t\t${90}protected \\$casts = [\r",
      "\t\t${90}\t//\trestcast snippet\r",
      "\t\t\t//\t'created_at' => 'datetime:Y-m-d',",
      "\t\t${90}];\r",
      "\t\t${93}public function __construct(array \\$attributes = []) {\r",
      "\t\t${93}\t//\\$this->setRawAttributes(['expire_date' => Carbon::now()->addDays(7)],true);\r",
      "\t\t${93}\tparent::__construct(\\$attributes);\r",
      "\t\t${93}}\r",
      "\r",
      "${95}\t\t/*\r\t\tpublic static function boot(){\r",
      "\t\t\tparent::boot();\r",
      "\t\t\tstatic::creating(function(\\$model){\r",
      "\t\t\t\t//dump('creating');\r",
      "\t\t\t});\r",
      "\t\t\tstatic::created(function(\\$model){\r",
      "\t\t\t\t//dump('created');\r",
      "\t\t\t});\r",
      "\t\t\tstatic::updating(function(\\$model){\r",
      "\t\t\t\t//dump('updating');\r",
      "\t\t\t}); \r",
      "\t\t\tstatic::updated(function(\\$model){\r",
      "\t\t\t\t//dump('updated');\r",
      "\t\t\t});\r",
      "\t\t\tstatic::saving(function(\\$model){\r",
      "\t\t\t\t//dump('saving');\r",
      "\t\t\t});\t\r",
      "\t\t\tstatic::saved(function(\\$model){\r",
      "\t\t\t\t//dump('saved');\r",
      "\t\t\t});\t\r",
      "\t\t\tstatic::loaded(function(\\$model){\r",
      "\t\t\t\t// dump('loaded');\r",
      "\t\t\t});\r",
      "\t\t\tstatic::addGlobalScope('closed', function (Builder \\$builder) {\r",
      "\t\t\t\t\\$builder->where('is_closed', '=', false);\r",
      "\t\t\t\t//::withoutGlobalScope('closed')\r",
      "\t\t\t});\r",
      "\t\t};\r",
      "\t\tpublic function newFromBuilder(\\$attributes = array(),\\$connection = null) {\r",
      "\t\t\t\\$instance = parent::newFromBuilder(\\$attributes);\r",
      "\t\t\t\\$instance->fireModelEvent('loaded');\r",
      "\t\t\treturn\t\\$instance;\r",
      "\t\t};\r",
      "\t\tpublic static function loaded(\\$callback, \\$priority = 0)   {\r",
      "\t\t\tstatic::registerModelEvent('loaded', \\$callback, \\$priority);\r",
      "\t\t}\r",
      "\t\tpublic function scopeIsClosed(\\$query, \\$state) {\r",
      "\t\t\treturn \\$query->where('is_closed', \\$state);\r",
      "\t\t\t//วิธีใช้   \\$model->isClose(false)->\r",
      "\t\t}\r",
      "\t\t//Defining An Accessor\r",
      "\t\tpublic function getFirstNameAttribute(\\$value){\r",
      "\t\t\treturn ucfirst(\\$value);\r",
      "\t\t\t//วิธีใช้ \\$firstName = \\$user->first_name;\r",
      "\t\t}\r",
      "\t\t//Defining A Mutator\r",
      "\t\tpublic function setFirstNameAttribute(\\$value){\t",
      "\t\t\t\\$this->attributes['first_name'] = strtolower(\\$value);\t",
      "\t\t\t//วิธีใช้ \\$user->first_name = 'Sally';\t",
      "\t\t}\t",
      "\t\t\t\r${100}\t\t*/\r",
      "\t\r",
      "\t\t//Laravel - Eloquent “Has”, “With”, “WhereHas” - What do they mean? }",
      "\t\r",
      "\t\t${102:/*",
      "\t\tpublic function parent()",
      "\t\t{",
      "\t\t    return \\$this->hasOne('Item', 'id', 'parent_id');",
      "\t\t\\}",
      "\t\tpublic function children()",
      "\t\t{",
      "\t\t    return \\$this->hasMany('Item', 'parent_id', 'id');",
      "\t\t\\}",
      "\t\tpublic function tree()",
      "\t\t{",
      "\t\t    return static::with(implode('.', array_fill(0,10, 'children')))->where('parent_id', '=', '0')->get();",
      "\t\t\\}",
      "\t\t*/}\r",
      "} ${0}\r"
    ],
    "description": "Servit rest model snippet"
  },
  "restfunc": {
    "prefix": "restfunc",
    "body": [
      "\r",
      "/**\r",
      "*@${1}noAuth\r",
      "*@url ${10|GET,POST,PUT,DELETE|} /${20:index}${30:}\r",
      "*----------------------------------------------",
      "*FILE NAME:  ${TM_FILENAME} gen for Servit Framework Controller\r",
      "*Created by: Tlen<limweb@hotmail.com>",
      "*DATE:  ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}(${CURRENT_DAY_NAME_SHORT})  ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND} \r\n",
      "*----------------------------------------------",
      "*/\r",
      "public function ${20}(${30}){\r",
      "\ttry {\r",
      "\t\t\r",
      "\t\treturn [\r",
      "\t\t\t//'ajax' => \\$ajax,\r",
      "\t\t\t//'page' => \\$page,\r",
      "\t\t\t//'perpage' => \\$perpage,\r",
      "\t\t\t//'skip' => \\$skip,\r",
      "\t\t\t//'total' => \\$total,\r",
      "\t\t\t//'count' => count(\\$datas),\r",
      "\t\t\t//'datas' => \\$datas,\r",
      "\t\t\t//'columns' => \\$columns,\r",
      "\t\t\t//'info' => \\$info,\r",
      "\t\t\t//'infos' => \\$info,\r",
      "\t\t\t//'domains' => \\$domains,\r",
      "\t\t\t//'method' => \\$method,\r",
      "\t\t\t'status' => '1',\r",
      "\t\t\t'success'=> true,\r",
      "\t\t\t//'sql' => Capsule::getQueryLog(),\r",
      "\t\t\t'func'=> __CLASS__.'/'.__FUNCTION__\r",
      "\t\t];\r",
      "\t} catch (Exception \\$e) {\r",
      "\t\treturn[\r",
      "\t\t\t'status' => '0',\r",
      "\t\t\t'success'=> false,\r",
      "\t\t\t'msg'=> \\$e->getMessage(),\r",
      "\t\t\t'func'=> __CLASS__.'/'.__FUNCTION__,\r",
      "\t\t]; \r",
      "\t}\r",
      "}\r",
      "\r",
      ""
    ],
    "description": "Serv Rest ful function Generator"
  },
  "restsrv": {
    "prefix": "restsrv",
    "body": [
      "\r",
      "//----------------------------------------------",
      "//FILE NAME:  ${TM_FILENAME} gen for Servit Framework Service\r",
      "//Created by: Tlen<limweb@hotmail.com>\r",
      "//DATE: ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}(${CURRENT_DAY_NAME_SHORT})  ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND} \r\n",
      "//----------------------------------------------",
      "use \\Servit\\Restsrv\\RestServer\\RestException as TestException;\r",
      "use \\Servit\\Restsrv\\Traits\\DbTrait as DbTrait;\r",
      "use \\Servit\\Restsrv\\Service\\BaseService as BaseService;\r",
      "use \\Servit\\Restsrv\\Service\\BasedbService as BasedbService;\r",
      "use Illuminate\\Database\\Capsule\\Manager as Capsule;\r",
      "\r",
      "class ${1:${TM_FILENAME_BASE}${2:Service}} extends BaseService\r",
      "{\r",
      "${3:\r",
      "    public static function all()",
      "    {",
      "        return ${30:Model}::get();",
      "    \\}",
      "",
      "    public static function alliddesc()",
      "    {",
      "        return ${30}::orderBy('id', 'desc')->get();",
      "    \\}",
      "",
      "    public static function insert(\\$arrdata)",
      "    {",
      "        \\$r = new ${30}();",
      "        \\$fills = \\$r->getFillable();",
      "        foreach (\\$fills as \\$key) {",
      "            if (isset(\\$arrdata[\\$key])) {",
      "                \\$r->{\\$key\\} = \\$arrdata[\\$key];",
      "            \\}",
      "        \\}",
      "        \\$r->save();",
      "        return \\$r;",
      "    \\}",
      "",
      "    public static function insertOrupdate(\\$arrdata)",
      "    {",
      "        \\$r = null;",
      "        if (isset(\\$arrdata['id'])) {",
      "            \\$r = ${30}::find(\\$arrdata['id']);",
      "        \\}",
      "        if (!\\$r) {",
      "            \\$r = new ${30}();",
      "        \\}",
      "",
      "        \\$fills = \\$r->getFillable();",
      "        foreach (\\$fills as \\$key) {",
      "            if (isset(\\$arrdata[\\$key])) {",
      "                \\$r->{\\$key\\} = \\$arrdata[\\$key];",
      "            \\}",
      "        \\}",
      "        \\$r->save();",
      "        return \\$r;",
      "    \\}",
      "",
      "    public static function delete(\\$id)",
      "    {",
      "        ${35:\\$r} = ${30}::find(\\$id);",
      "        if (${35}) {",
      "            return ${35}->delete();",
      "        \\} else {",
      "            return 0;",
      "        \\}",
      "    \\}",
      "    ",
      " }",
      "    ${0}\r",
      "} \r",
      "\r",
      ""
    ],
    "description": "Servit Rest ful Service "
  },
  "restctrl": {
    "prefix": "restctrl",
    "body": [
      "\r",
      "//----------------------------------------------",
      "//FILE NAME:  ${TM_FILENAME} gen for Servit Framework Controller\r",
      "//Created by: Tlen<limweb@hotmail.com>\r",
      "//DATE: ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}(${CURRENT_DAY_NAME_SHORT})  ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND} \r\n",
      "//----------------------------------------------",
      "use\t\\Servit\\Restsrv\\RestServer\\RestException;\r",
      "use\t\\Servit\\Restsrv\\RestServer\\RestController as BaseController;\r",
      "use\tIlluminate\\Database\\Capsule\\Manager as Capsule;\r",
      "use\tServit\\Restsrv\\Libs\\Request; \r",
      "use\tServit\\Restsrv\\Libs\\Linenotify;\r",
      "use\tCarbon\\Carbon;\r",
      "${10}use \\Servit\\Restsrv\\traits\\DbTrait;\r",
      "\r",
      "class ${20:${TM_FILENAME_BASE}${22:Controller}} extends BaseController {\r",
      "\t\r",
      "${29:",
      "   /**",
      "     *@noAuth",
      "     *@url GET /${30:route}s",
      "     *----------------------------------------------",
      "     *FILE NAME:  ${TM_FILENAME} gen for Servit Framework Controller",
      "     *DATE: ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}(${CURRENT_DAY_NAME_SHORT})  ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}",
      "",
      "     *----------------------------------------------",
      "     */",
      "    public function alliddesc()",
      "    {",
      "        try {",
      "            \\$datas = ${40:Service}::alliddesc();",
      "            return [",
      "                'datas' => \\$datas,",
      "                'status' => '1',",
      "                'success' => true,",
      "            ];",
      "        \\} catch (Exception \\$e) {",
      "            return [",
      "                'status' => '0',",
      "                'success' => false,",
      "                'msg' => \\$e->getMessage(),",
      "            ];",
      "        \\}",
      "    \\}",
      "",
      "    /**",
      "     *@noAuth",
      "     *@url POST /${30}/update",
      "     *----------------------------------------------",
      "     *FILE NAME:  ${TM_FILENAME} gen for Servit Framework Controller",
      "     *Created by: Tlen<limweb@hotmail.com>",
      "     *DATE: ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}(${CURRENT_DAY_NAME_SHORT})  ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}",
      "",
      "     *----------------------------------------------",
      "     */",
      "    public function update()",
      "    {",
      "        try {",
      "            \\$rs = ${40}::insertOrupdate(\\$this->input->input->toArray());",
      "            \\$datas = ${40}::alliddesc();",
      "            return [",
      "                'datas' => \\$datas,",
      "                'status' => \\$rs,",
      "                'success' => \\$rs,",
      "            ];",
      "        \\} catch (Exception \\$e) {",
      "            return [",
      "                'status' => '0',",
      "                'success' => false,",
      "                'msg' => \\$e->getMessage(),",
      "            ];",
      "        \\}",
      "    \\}",
      "",
      "    /**",
      "     *@noAuth",
      "     *@url POST /${30}/add",
      "     *----------------------------------------------",
      "     *FILE NAME:  ${TM_FILENAME} gen for Servit Framework Controller",
      "     *Created by: Tlen<limweb@hotmail.com>",
      "     *DATE: ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}(${CURRENT_DAY_NAME_SHORT})  ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}",
      "",
      "     *----------------------------------------------",
      "     */",
      "    public function add()",
      "    {",
      "        try {",
      "            \\$rs = ${40}::insert(\\$this->input->input->toArray());",
      "            \\$datas = ${40}::alliddesc();",
      "            return [",
      "                'datas' => \\$datas,",
      "                'status' => '1',",
      "                'success' => true,",
      "            ];",
      "        \\} catch (Exception \\$e) {",
      "            return [",
      "                'status' => '0',",
      "                'success' => false,",
      "                'msg' => \\$e->getMessage(),",
      "            ];",
      "        \\}",
      "    \\}",
      "",
      "    /**",
      "     *@noAuth",
      "     *@url GET /${30}/del/\\$id",
      "     *----------------------------------------------",
      "     *FILE NAME:  ${TM_FILENAME} gen for Servit Framework Controller",
      "     *Created by: Tlen<limweb@hotmail.com>",
      "     *DATE:${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}(${CURRENT_DAY_NAME_SHORT})  ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}",
      "",
      "     *----------------------------------------------",
      "     */",
      "    public function del(\\$id)",
      "    {",
      "        try {",
      "            \\$rs = ${40}::delete(\\$id);",
      "            \\$datas = ${40}::alliddesc();",
      "            return [",
      "                'datas' => \\$datas,",
      "                'status' => '1',",
      "                'success' => true,",
      "            ];",
      "        \\} catch (Exception \\$e) {",
      "            return [",
      "                'status' => '0',",
      "                'success' => false,",
      "                'msg' => \\$e->getMessage(),",
      "            ];",
      "        \\}",
      "    \\}",
      "",
      "}",
      "\t${0}\r",
      "\r",
      "}\r",
      "\r"
    ],
    "description": "Servit rest ful Controller"
  },
  "restcast": {
    "prefix": "restcast",
    "body": "'${10:field}' => '${20|integer,real,float,double,string,boolean,object,array,collection,date,datetime,timestamp|}',${0}",
    "description": "Servit rest Ful Model Cast type"
  },
  "gql": {
    "prefix": "gql",
    "body": [
      " '$1'=> [\r",
      "           'name'=>'$10',\r",
      "           'description'=> '$20',\r",
      "           'type'=> ${30:Types::listOf(Types::type('${31:file}'))},\r",
      "           'args'=>[\r",
      "               $40\r",
      "           ],\r",
      "           'resolve'=> function(\\$root,\\$args) {\r",
      "               return ${50:File::get()};\r",
      "           }\r",
      "       ];"
    ],
    "description": "gql Servit Graphql type"
  },
  "gqtype": {
    "prefix": "gqtype",
    "body": [
      "use Servit\\Restsrv\\Libs\\Graphql as GraphQL;",
      "use GraphQL\\Type\\Definition\\ObjectType;",
      "use GraphQL\\Type\\Definition\\ResolveInfo;",
      "",
      "class ${10:TM_FILENAME_BASE $11} extends ObjectType",
      "{",
      "    public function __construct()",
      "    {",
      "        \\$config = [",
      "            'name' => '$20',",
      "            'description' => '$30',",
      "            'fields' => function() {",
      "                return [",
      "                    'id'=>['type'=>GraphQL::id()],",
      "                    $40",
      "                ];",
      "            }",
      "        ];",
      "        parent::__construct(\\$config);",
      "    }",
      "}"
    ],
    "description": "gqtype Servit Framework Generator"
  },
  "gq": {
    "prefix": "gq",
    "body": [
      "use GraphQL\\Type\\Definition\\ObjectType;",
      "use GraphQL\\Type\\Definition\\ResolveInfo;",
      "use GraphQL\\Type\\Definition\\Type;",
      "use  Servit\\Restsrv\\Ligs\\Graphql as GraphQL; ",
      "",
      "class ${TM_FILENAME_BASE}$11  extends ObjectType",
      "{",
      "",
      "    public function __construct()",
      "    {",
      "        \\$config = [",
      "            'name' => '${20:Query}',",
      "            'fields' => [",
      "                '${30:status}'=>[",
      "                    'type'=>${40:GraphQL::boolean()},",
      "                    'description'=>'$50',",
      "                    'resolve' => function(\\$root,\\$args) {",
      "                        $60return true;",
      "                        ",
      "                    }",
      "                ]",
      "            ],",
      "        ];",
      "        parent::__construct(\\$config);",
      "    }",
      "}"
    ],
    "description": "gq  graphql query Servit Framework generator"
  },
  "Print nbsp": {
    "prefix": "nbsp",
    "body": [
      "&nbsp;"
    ],
    "description": "&nbsp;"
  },
  "limslide": {
    "prefix": "limslide",
    "body": [
      "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\">",
      "<html lang=\"en\">",
      "<head>",
      "    <meta charset=\"UTF-8\">",
      "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
      "    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">",
      "    <title>${30:title}</title>",
      "</head>",
      "<body>",
      "    <div id=\"fb-root\"></div>",
      "    <script>",
      "        (function(d, s, id) {",
      "            var js, fjs = d.getElementsByTagName(s)[0];",
      "            if (d.getElementById(id)) return;",
      "            js = d.createElement(s);",
      "            js.id = id;",
      "            js.src = 'https://connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.11&appId=123824780961945';",
      "            fjs.parentNode.insertBefore(js, fjs);",
      "        }(document, 'script', 'facebook-jssdk'));",
      "    </script>",
      "    <div style=\"text-align: center;\">",
      "        <div>",
      "            <span style=\"color: rgb(22, 22, 22); font-family: Conv_Kunlasatri; font-size: 20px;margin:10px,50px,20px,10px\">",
      "                    ${20:add detail and avtive --li class=\"active\"  --class=\"item active\"}",
      "${0}",
      "            </span>",
      "        </div>",
      "            <div id=\"carousel-id\" class=\"carousel slide\" data-ride=\"carousel\">",
      "                <ol class=\"carousel-indicators\">",
      "                    li[data-target=#carousel-id data-slide-to=\"1\" class=\"active\"]li[data-target=#carousel-id data-slide-to=\"\\$@2\" class=\"\"]*${40:1}",
      "                </ol>",
      "                <div class=\"carousel-inner\">",
      "(div[class=\"item active \"]>img[src=/uploads/news/${2:path}01.jpg data-src=/uploads/news/${2:path}01.jpg alt=\"1 slide \"]div[class=container])(div[class=item]>img[src=/uploads/news/${2:path}\\$\\$@2.jpg data-src=/uploads/news/${2:path}\\$\\$@2.jpg alt=\"\\$@2 slide \"]div[class=container])*${9}",
      "                </div>",
      "                <a class=\"left carousel-control\" href=\"#carousel-id\" data-slide=\"prev\"><span class=\"glyphicon glyphicon-chevron-left\"></span></a>",
      "                <a class=\"right carousel-control\" href=\"#carousel-id\" data-slide=\"next\"><span class=\"glyphicon glyphicon-chevron-right\"></span></a>",
      "            </div>",
      "            <script src=\"http://netdna.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js\"></script><script>",
      "            \\$('#carousel-id').carousel({",
      "                interval: 3000",
      "            });",
      "            </script></div></body></html>",
      ""
    ],
    "description": "list slide snippt for limfamily.in.th"
  },
  "limnews": {
    "prefix": "limnews",
    "body": [
      "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\">\r",
      "<html lang=\"en\"><head>\r",
      "    <meta charset=\"UTF-8\">\r",
      "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r",
      "    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r",
      "    <title>${40:title}</title>\r",
      "</head>\r",
      "<body>\r",
      "<div id=\"fb-root\"></div>\r",
      "<script>\r",
      "    (function(d, s, id) {\r",
      "        var js, fjs = d.getElementsByTagName(s)[0];\r",
      "        if (d.getElementById(id)) return;\r",
      "        js = d.createElement(s);\r",
      "        js.id = id;\r",
      "        js.src = 'https://connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.11&appId=123824780961945';\r",
      "        fjs.parentNode.insertBefore(js, fjs);\r",
      "    }(document, 'script', 'facebook-jssdk'));\r",
      "</script>\r",
      "<div style=\"text-align: center;\"><div>\r",
      "<span style=\"color: rgb(22, 22, 22); font-family: Conv_Kunlasatri; font-size: 20px;margin:10px,50px,20px,10px\">\r",
      "           ${50:description detail}\r",
      "</span></div>\r",
      "(img[alt='img $' class=img-responsive src=/uploads/news/${1:path}$$.jpg style='max-width:80%;height:auto;margin:0 auto;']br)*${5:3}\r",
      "</div></body></html>"
    ],
    "description": "limnews"
  },
  "rfsrv": {
    "prefix": "rfsrv",
    "body": "<?php\r\nrequire_once __DIR__.'/../database.php';\r\nrequire_once __DIR__.'/RestfulServer.php';\r\n\r\nclass  ${1}Service extends RestfulServer {\r\n\t\t${6}//protected \\$usedb = true;\r\n\t\tpublic function __construct() {\r\n\t\t\tparent::__construct();\r\n\t\t}\r\n\r\n\t\tpublic function index(){\r\n\t\t\techo '${1}Service';\r\n\t\t}\r\n\r\n\t\tpublic function model(){\r\n\t\t\treturn new ${5:Model}();\r\n\t\t}\r\n}\r\n\r\n$${1/(.+)/\\L\\1/g}service = new ${1}Service();\r\n$${1/(.+)/\\L\\1/g}service->run();\r\n\r\n",
    "description": ""
  },
  "vcc": {
    "prefix": ["vcc"],
    "body":[
      "export default { ",
      "    template: `${50}`,",
      "    mixins: [], ",
      "    data() { ",
      "      return { ",
      "          theme: 'AdminLte', ",
      "          name: '${10}', ",
      "          uuid: '', ",      
      "      }; ",
      "    }, ",
      "    created() { ",
      "      console.log( this.name + 'component is created'); ",
      "      this.uuid ='idx'+Math.random().toString(36).slice(-6);  ",
      "    }, ",
      "    methods: {}, ",
      "    computed: {}, ",
      "    mounted() {}, ",
      "    components:{} ",
      "}; ",
    ],
    "description": "vue Template literals"
  },
  "vcc1": {
    "prefix": ["vcc","vcinput"],
    "body":[
      "export default { ",
      "    inheritAttrs: false, ",
      "    template: ` ",
      "    <input ",
      "       ${50:type=\"text${0}\"}",
      "       class=\"w-full h-12 rounded border-1\"  ",
      "       :value=\"value\" ",
      "       @input=\"updateValue(\\$event.target.value)\"  ",
      "       v-bind=\"\\$attrs\" ",
      "    />       ",
      "    `,",
      "    mixins: [], ",
      "    props:[\"value\"], ",
      "    data() { ",
      "      return { ",
      "          theme: 'AdminLte', ",
      "          name: '${TM_FILENAME_BASE}${10}', ",
      "          uuid: '', ",
      "      }; ",
      "    }, ",
      "    created() { ",
      "      console.log( this.name + 'component is created'); ",
      "      this.uuid ='idx'+Math.random().toString(36).slice(-6);  ",
      "    }, ",
      "    methods: { ",
      "       updateValue(value){ ",
      "         this.\\$emit('input',value) ",
      "       }         ",
      "    }, ",
      "    computed: {}, ",
      "    mounted() {}, ",
      "    components:{} ",
      "}; ",
    ],
    "description": "vue Template literals"
  },
  "catcherrmsg": {
    "prefix": "catcherrmsg",
    "body": [
      "var errorMessage = \"\";\r",
      "if (error.response != null && error.response.data.message) {\r",
      "    errorMessage = error.response.data.message;\r",
      "} else {\r",
      "    errorMessage = error.message;\r",
      "}\r",
      "\r",
      "setTimeout(() => {\r",
      "    alert(\"Fail:\" + errorMessage);\r",
      "}, 500);"
    ],
    "description": "catch error message "
  },
  "myajax": {
    "prefix": "myajax",
    "body": "\r\n    var data =  { ${0} };\r\n\t$.ajax({\r\n        url: \"${1:/index.php}\",\r\n        type: \"${10:post/get/put/delete}\",\r\n        dataType:\"json\",\r\n        data: JSON.stringify(data),\r\n        success: function (response) {\r\n            ${20}\r\n        },\r\n        error: function(jqXHR, textStatus, errorThrown) {\r\n           console.log(textStatus, errorThrown);\r\n        }\r\n    });\r\n\r\n",
    "description": " $ajax function "
  },
  "amchart": {
    "prefix": "amchart",
    "body": [
      "{",
      "    id: '${1:chart1}',",
      "    charttype: '${2|XYChart,PieChart,PieChart3D|}',",
      "    dateFormatter: {",
      "        dateFormat: 'yyyy-MM-dd'",
      "    },",
      "    name: {",
      "        th: '${10:กราฟแท่ง}',",
      "        en: '${11:chartname}'",
      "    },",
      "    title: {",
      "        text: '${12:กราฟแท่งtitle}'",
      "    },",
      "    xAxes: [{",
      "        commnet:'แนวนอน',",
      "        id: '${19:x1}',",
      "        type: '${20|ValueAxis,DateAxis,CategoryAxis,DurationAxis|}',",
      "        tooltipDateFormat: 'yyyy-MM-dd',",
      "        startLocation: 0,",
      "        dataFields: {",
      "            ${25|category,categoryX,dateX,dateY,value,valueX,valueY|}: '${26:day}'",
      "        },",
      "        title: {",
      "          text: '${27: title แนวนอน}'",
      "        },",
      "        renderer: {",
      "            labels: {",
      "                rotation: 0,",
      "                dy: 0,",
      "                dx: 0",
      "            },",
      "            grid: {",
      "                location: 0.5,",
      "                disabled: true",
      "            },",
      "            minGridDistance: 50,",
      "            fullWidthTooltip: true",
      "        }",
      "    }],",
      "    yAxes: [{",
      "        commnet:'แนวตั้ง',",
      "        id: '${29:y1}',",
      "        type: '${30|ValueAxis,DateAxis,CategoryAxis,DurationAxis|}',",
      "        dataFields: {",
      "            ${35|category,categoryX,dateX,dateY,value,valueX,valueY|}: '${36:Value}'",
      "        }",
      "        title: {",
      "          text: '${37: title แนวตั้ง}'",
      "        },",
      "    }],",
      "    series: [{",
      "        id: '${41:s1}',",
      "        xAxis: '${19}',",
      "        yAxis: '${29}',",
      "        type: '${44|PieSeries,PieSeries3D,LineSeries,ColumnSeries,CandlestickSeries,ColumnSeries3D,ConeSeries|}',",
      "        name: '${45:Series Title}',",
      "        tooltipText: '{${55|category,categoryX,dateX,dateY,value,valueX,valueY|}}: [bold]{${56|category,categoryX,dateX,dateY,value,valueX,valueY|}}[/]',",
      "        stacked: false,",
      "        dataFields: {",
      "            ${55|category,categoryX,dateX,value,valueY|}: '${57:day}',",
      "            ${56|category,categoryX,dateX,value,valueY|}: '${58:Value}'",
      "        }",
      "    }],",
      "    cursor: {},",
      "    legend: {},",
      "    data: []",
      "}",
    ],
    "description": "amchart sample"
  },
  "xaxis": {
    "prefix": "xaxis",
    "body": [
      "{",
      "        id: '${19:x}',",
      "        type: '${20|ValueAxis,DateAxis,CategoryAxis,DurationAxis|}',",
      "        tooltipDateFormat: 'yyyy-MM-dd',",
      "        startLocation: 0,",
      "        dataFields: {",
      "            ${25|category,categoryX,dateX,value,valueY|}: '${26:day}'",
      "        },",
      "        ${27:title: {",
      "          text: '${29: title แนวตั้ง}'",
      "        \\},}",
      "        renderer: {",
      "            labels: {",
      "                rotation: 0,",
      "                dy: 0,",
      "                dx: 0",
      "            },",
      "            grid: {",
      "                location: 0.5,",
      "                disabled: true",
      "            },",
      "            minGridDistance: 50,",
      "            fullWidthTooltip: true",
      "        },",
      "        comment:'//แนวนอน',",
      "    }",
    ],
    "description": "amchart xaxis"
  },
  "yaxis": {
    "prefix": "yaxis",
    "body": [
      "{",
      "        id: '${29:y}',",
      "        type: '${30|ValueAxis,DateAxis,CategoryAxis,DurationAxis|}',",
      "        dataFields: {",
      "            ${35|category,categoryX,dateX,value,valueY|}: '${36:Value}'",
      "        },",
      "        ${38:title: {",
      "          text: '${39: title แนวตั้ง}'",
      "        \\},}",
      "        comment:'//แนวตั้ง',",
      "    }"
    ],
    "description": "amchart yaxis"
  },
  "series": {
    "prefix": "series",
    "body": [
      "{",
      "        id: '${18:s1}',",
      "        xAxis: '${19:x}',",
      "        yAxis: '${29:y}',",
      "        type: '${44|PieSeries,PieSeries3D,LineSeries,ColumnSeries,CandlestickSeries,ColumnSeries3D,ConeSeries|}',",
      "        name: '${45:Series Title}',",
      "        tooltipText: '{${55|category,categoryX,dateX,value,valueY|}}: [bold]{${56|category,categoryX,dateX,value,valueY|}}[/]',",
      "        stacked: false,",
      "        dataFields: {",
      "            ${55|category,categoryX,dateX,value,valueY|}: '${57:day}',",
      "            ${56|category,categoryX,dateX,value,valueY|}: '${58:Value}'",
      "        }",
      "    }"
    ],
    "description": "amchart series"
  },
  "dploycfg": {
    "prefix": "dploycfg",
    "body": [
      "{",
      "\t\"deploy\": {",
      "\t\t\"packages\": [{",
      "\t\t\t\t\"name\": \"${10:Project}\",",
      "\t\t\t\t\"files\": [${15: \"/test1/**\"}],",
      "\t\t\t\t\"exclude\": [${20}],",
      "\t\t\t\t\"deployOnChange\": {",
      "\t\t\t\t\t\"exclude\": [${30}],",
      "\t\t\t\t\t\"useTargetList\": ${31|false,true|}",
      "\t\t\t\t},",
      "\t\t\t\t\"deployOnSave\": ${32|false,true|},",
      "\t\t\t\t\"targets\": [ ${120: ${51}, ${61},${81}}]",
      "\t\t\t}],",
      "\t\t\"targets\": [${40:{",
      "\t\t\t\t\"type\": \"${50|local,sftp,ftp|}\",",
      "\t\t\t\t\"name\": ${51:\"LocalTest1\"},",
      "\t\t\t\t\"description\": \"${55:A local folder}\",",
      "\t\t\t\t\"checkBeforeDeploy\": ${56|false,true|},",
      "\t\t\t\t\"dir\": \"${58:d:/test/test1}\",",
      "\t\t\t\t\\},}${41:{",
      "\t\t\t\t\"type\":\"${60|local,sftp,ftp|}\",",
      "\t\t\t\t\"name\": ${61:\"EventpassSFTP\"},",
      "\t\t\t\t\"description\": \"${65:A SFTP folder}\",",
      "\t\t\t\t\"dir\": \"${70:/var/www/html/web/testdeploy}\",",
      "\t\t\t\t\"host\": \"${71:58.82.171.253}\",",
      "\t\t\t\t\"port\": ${72:22},",
      "\t\t\t\t\"user\": \"${73:limweb}\",",
      "\t\t\t\t\"password\": \"${74:tlen4105}\",",
      "\t\t\t\t\"checkBeforeDeploy\": ${75|false,true|},",
      "\t\t\t\t\"uploadOnSave\": ${76|false,true|},",
      "\t\t\t\t${77:\"mappings\": [{",
      "\t\t\t\t\t\"source\": \"${78:/test2}\",",
      "\t\t\t\t\t\"target\": \"${79:/}\"",
      "\t\t\t\t\\}]}",
      "\t\t\t\\},}${42:",
      "\t\t\t{",
      "\t\t\t\t\t\"type\": \"${80|local,sftp,ftp|}\",",
      "\t\t\t\t\t\"name\": ${81:\"ftp_shopsthai\"},",
      "\t\t\t\t\t\"description\": \"${82:Mui Shopsthia ftp folder}\",",
      "\t\t\t\t\t\"dir\": \"${90:/domains/shopsthai.com/public_html/ss}\",",
      "\t\t\t\t\t\"host\": \"${91:www.shopsthai.com}\",",
      "\t\t\t\t\t\"port\": ${92:21},",
      "\t\t\t\t\t\"user\": \"${93:shops}\",",
      "\t\t\t\t\t\"password\": \"${94:Tlen4105}\",",
      "\t\t\t\t\t\"checkBeforeDeploy\": ${95|false,true|},",
      "\t\t\t\t\t\"uploadOnSave\": ${96|false,true|},",
      "\t\t\t\t\t${98:\"mappings\": [{",
      "\t\t\t\t\t\"source\": \"${99:/test2}\",",
      "\t\t\t\t\t\"target\": \"${100:/}\"",
      "\t\t\t\t\t}]",
      "\t\t\t\\}}",
      "\t\t\t]",
      "\t}",
      "}",
    ],
    "description": "vs-deploy sample config"
  },
  "eloquentrela": {
    "prefix": "eloquentrela",
    "body": [
      "/**",
      "* ${1}",
      "* ${2}",
      "* @return ${3:void}",
      "*/",
      "public function ${5:functionname}() {",
      "   return \\$this->${6|hasOne,hasMany,belongsTo|}('${30:Model}', '${40:foreign_key}', '${50:local_key}');",
      "}",
    ],
    "description": " Eloquent Relation Snippet",
  },
  "eloquentbelongsToMany": {
    "prefix": "eloquentbelongsToMany",
    "body": [
      "/**",
      "* ${1}",
      "* ${2}",
      "* @return ${3:void}",
      "*/",
      "public function ${5:functionname}() {",
      "   return \\$this->belongsToMany('${30:Model}', '${40:relation_table}', '${50:model_id}', '${60:relation_id}');",
      "}",
    ],
    "description": " Eloquent Relation belongsToMany Snippet",
  },
  "eloquenthas": {
    "prefix": "eloquenthas",
    "body": [
      "/**",
      "* ${1}",
      "* ${2}",
      "* @return ${3:void}",
      "*/",
      "public function ${5:functionname}() {",
      "  return \\$this->${5|hasManyThrough,hasOneThrough|}(;",
      "      '${30:App\\Post}',;",
      "      '${40:App\\User}',;",
      "      '${50:country_id}', // Foreign key on users table...;",
      "      '${60:user_id}', // Foreign key on posts table...;",
      "      '${70:id}', // Local key on countries table...;",
      "      '${80:id}' // Local key on users table...;",
      "  );",
      "}",
    ],
    "description": " Eloquent Relation hasManyThrough,hasOneThrough Snippet",
  },
  "eloquentmorphTo": {
    "prefix": "eloquentmorphTo",
    "body": [
      "/**",
      "* ${1}",
      "* ${2}",
      "* @return ${3:void}",
      "*/",
      "public function ${5:functionname}() {",
      "   return \\$this->${10|morphTo,morphOne,morphMany,morphedByMany|}(${19:'${20:Model}', '${30:taggable}'});",
      "}",
    ],
    "description": " Eloquent Relation hasManyThrough,hasOneThrough Snippet",
  },
  "eloquentmutator": {
    "prefix": "eloquentmutator",
    "body": [
      " /**",
      " * ${10:attname}",
      " *",
      " * @param  string  \\$${20:value}",
      " * @return void",
      " */",
      "public function set${15:FirstName}Attribute(\\$${20})",
      "{",
      "    \\$this->attributes['${10}'] =${0}${30:\\$${20}};",
      "}      ",
    ],
    "description": " Eloquent A Mutator Snippet",
  },
  "eloquentextends": {
    "body": [
      "    include_once __DIR__.'${10}';",
      "\r",
      "    //FILE NAME:  ${TM_FILENAME} gen for Servit Framework Model\r",
      "    //Created by: ${20:Tlen<limweb@hotmail.com>}\r",
      "    //DATE: ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}(${CURRENT_DAY_NAME_SHORT})  ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND} \r\n",
      "",
      "    class ${30:${TM_FILENAME_BASE}}  extends  ${40:extendModel} {",
      "        ",
      "        ${41:",
      "        ${50: protected   \\$attributes = []; }",
      "        ${55: protected   \\$touches = []; }",
      "        ${60: protected   \\$guarded = ['id']; }",
      "        ${65: protected   \\$fillable = []; }",
      "        ${70: protected   \\$hidden = []; }",
      "        ${75: protected   \\$appends = []; }",
      "        ${80: protected   \\$with = []; }",
      "        ${85: protected   \\$connection = ''; }",
      "        ${90: protected   \\$casts = []; }",
      "        ",
      "        ${0}",
      "",
      "        ${110:protected static function boot(){",
      "            parent::boot();",
      "            static::addGlobalScope(function(\\$query){",
      "                    \\$query->where(${99},${100});",
      "            \\});",
      "        \\}}",
      "        }",
      "",
      "    }",
      ""
    ],
    "prefix": "eloquentextends",
    "description": "Eloquent Model Extends "
  }
}